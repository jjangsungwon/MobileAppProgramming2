{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\sw\\\\Documents\\\\MobileAppProgramming2\\\\node_modules\\\\react-native-elements\\\\src\\\\card\\\\Card.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ImageNative from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport normalize from \"../helpers/normalizeText\";\nimport { fonts, TextPropTypes, ViewPropTypes, withTheme } from \"../config\";\nimport Text from \"../text/Text\";\nimport Divider from \"../divider/Divider\";\nimport Image from \"../image/Image\";\n\nvar Card = function Card(props) {\n  var children = props.children,\n      containerStyle = props.containerStyle,\n      wrapperStyle = props.wrapperStyle,\n      imageWrapperStyle = props.imageWrapperStyle,\n      title = props.title,\n      titleStyle = props.titleStyle,\n      titleNumberOfLines = props.titleNumberOfLines,\n      featuredTitle = props.featuredTitle,\n      featuredTitleStyle = props.featuredTitleStyle,\n      featuredSubtitle = props.featuredSubtitle,\n      featuredSubtitleStyle = props.featuredSubtitleStyle,\n      dividerStyle = props.dividerStyle,\n      image = props.image,\n      imageStyle = props.imageStyle,\n      imageProps = props.imageProps,\n      theme = props.theme,\n      attributes = _objectWithoutProperties(props, [\"children\", \"containerStyle\", \"wrapperStyle\", \"imageWrapperStyle\", \"title\", \"titleStyle\", \"titleNumberOfLines\", \"featuredTitle\", \"featuredTitleStyle\", \"featuredSubtitle\", \"featuredSubtitleStyle\", \"dividerStyle\", \"image\", \"imageStyle\", \"imageProps\", \"theme\"]);\n\n  return React.createElement(View, _extends({}, attributes, {\n    style: StyleSheet.flatten([styles.container(theme), image && {\n      padding: 0\n    }, containerStyle && containerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: StyleSheet.flatten([styles.wrapper, wrapperStyle && wrapperStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, title === '' || React.isValidElement(title) ? title : title && title.length && React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    testID: \"cardTitle\",\n    style: StyleSheet.flatten([styles.cardTitle(theme), image && styles.imageCardTitle, titleStyle && titleStyle]),\n    numberOfLines: titleNumberOfLines,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, title), !image && React.createElement(Divider, {\n    style: StyleSheet.flatten([styles.divider, dividerStyle && dividerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  })), image && React.createElement(View, {\n    style: imageWrapperStyle && imageWrapperStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, _extends({\n    style: [{\n      width: null,\n      height: 150\n    }, imageStyle && imageStyle],\n    source: image\n  }, imageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), (featuredTitle || featuredSubtitle) && React.createElement(View, {\n    style: styles.overlayContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, featuredTitle && React.createElement(Text, {\n    style: StyleSheet.flatten([styles.featuredTitle, featuredTitleStyle && featuredTitleStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, featuredTitle), featuredSubtitle && React.createElement(Text, {\n    style: StyleSheet.flatten([styles.featuredSubtitle, featuredSubtitleStyle && featuredSubtitleStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, featuredSubtitle))), React.createElement(View, {\n    style: StyleSheet.flatten([{\n      padding: 10\n    }, wrapperStyle && wrapperStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, children)), !image && children));\n};\n\nCard.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n  containerStyle: ViewPropTypes.style,\n  wrapperStyle: ViewPropTypes.style,\n  overlayStyle: ViewPropTypes.style,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  titleStyle: TextPropTypes.style,\n  featuredTitle: PropTypes.string,\n  featuredTitleStyle: TextPropTypes.style,\n  featuredSubtitle: PropTypes.string,\n  featuredSubtitleStyle: TextPropTypes.style,\n  dividerStyle: ViewPropTypes.style,\n  image: ImageNative.propTypes.source,\n  imageStyle: ViewPropTypes.style,\n  imageWrapperStyle: ViewPropTypes.style,\n  imageProps: PropTypes.object,\n  titleNumberOfLines: PropTypes.number,\n  theme: PropTypes.object\n};\nvar styles = {\n  container: function container(theme) {\n    return _objectSpread({\n      backgroundColor: 'white',\n      borderWidth: 1,\n      padding: 15,\n      margin: 15,\n      marginBottom: 0,\n      borderColor: theme.colors.grey5\n    }, Platform.select({\n      android: {\n        elevation: 1\n      },\n      default: {\n        shadowColor: 'rgba(0,0,0, .2)',\n        shadowOffset: {\n          height: 0,\n          width: 0\n        },\n        shadowOpacity: 1,\n        shadowRadius: 1\n      }\n    }));\n  },\n  featuredTitle: _objectSpread({\n    fontSize: normalize(18),\n    marginBottom: 8,\n    color: 'white'\n  }, Platform.select({\n    android: _objectSpread({}, fonts.android.black),\n    default: {\n      fontWeight: '800'\n    }\n  })),\n  featuredSubtitle: _objectSpread({\n    fontSize: normalize(13),\n    marginBottom: 8,\n    color: 'white'\n  }, Platform.select({\n    android: _objectSpread({}, fonts.android.black),\n    default: {\n      fontWeight: '400'\n    }\n  })),\n  wrapper: {\n    backgroundColor: 'transparent'\n  },\n  divider: {\n    marginBottom: 15\n  },\n  cardTitle: function cardTitle(theme) {\n    return _objectSpread(_objectSpread({\n      fontSize: normalize(14),\n      color: theme.colors.grey1\n    }, Platform.select({\n      android: _objectSpread({}, fonts.android.black),\n      default: {\n        fontWeight: 'bold'\n      }\n    })), {}, {\n      textAlign: 'center',\n      marginBottom: 15\n    });\n  },\n  imageCardTitle: {\n    marginTop: 15\n  },\n  overlayContainer: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.2)',\n    alignSelf: 'stretch',\n    justifyContent: 'center',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n};\nexport { Card };\nexport default withTheme(Card, 'Card');","map":{"version":3,"sources":["C:/Users/sw/Documents/MobileAppProgramming2/node_modules/react-native-elements/src/card/Card.js"],"names":["React","PropTypes","normalize","fonts","TextPropTypes","ViewPropTypes","withTheme","Text","Divider","Image","Card","props","children","containerStyle","wrapperStyle","imageWrapperStyle","title","titleStyle","titleNumberOfLines","featuredTitle","featuredTitleStyle","featuredSubtitle","featuredSubtitleStyle","dividerStyle","image","imageStyle","imageProps","theme","attributes","StyleSheet","flatten","styles","container","padding","wrapper","isValidElement","length","cardTitle","imageCardTitle","divider","width","height","overlayContainer","propTypes","oneOfType","element","arrayOf","style","overlayStyle","string","ImageNative","source","object","number","backgroundColor","borderWidth","margin","marginBottom","borderColor","colors","grey5","Platform","select","android","elevation","default","shadowColor","shadowOffset","shadowOpacity","shadowRadius","fontSize","color","black","fontWeight","grey1","textAlign","marginTop","flex","alignItems","alignSelf","justifyContent","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { View, Platform, Image as ImageNative, StyleSheet } from 'react-native';\r\n\r\nimport normalize from '../helpers/normalizeText';\r\nimport { fonts, TextPropTypes, ViewPropTypes, withTheme } from '../config';\r\n\r\nimport Text from '../text/Text';\r\nimport Divider from '../divider/Divider';\r\nimport Image from '../image/Image';\r\n\r\nconst Card = props => {\r\n  const {\r\n    children,\r\n    containerStyle,\r\n    wrapperStyle,\r\n    imageWrapperStyle,\r\n    title,\r\n    titleStyle,\r\n    titleNumberOfLines,\r\n    featuredTitle,\r\n    featuredTitleStyle,\r\n    featuredSubtitle,\r\n    featuredSubtitleStyle,\r\n    dividerStyle,\r\n    image,\r\n    imageStyle,\r\n    imageProps,\r\n    theme,\r\n    ...attributes\r\n  } = props;\r\n\r\n  return (\r\n    <View\r\n      {...attributes}\r\n      style={StyleSheet.flatten([\r\n        styles.container(theme),\r\n        image && { padding: 0 },\r\n        containerStyle && containerStyle,\r\n      ])}\r\n    >\r\n      <View\r\n        style={StyleSheet.flatten([\r\n          styles.wrapper,\r\n          wrapperStyle && wrapperStyle,\r\n        ])}\r\n      >\r\n        {title === '' || React.isValidElement(title)\r\n          ? title\r\n          : title &&\r\n            title.length && (\r\n              <View>\r\n                <Text\r\n                  testID=\"cardTitle\"\r\n                  style={StyleSheet.flatten([\r\n                    styles.cardTitle(theme),\r\n                    image && styles.imageCardTitle,\r\n                    titleStyle && titleStyle,\r\n                  ])}\r\n                  numberOfLines={titleNumberOfLines}\r\n                >\r\n                  {title}\r\n                </Text>\r\n\r\n                {!image && (\r\n                  <Divider\r\n                    style={StyleSheet.flatten([\r\n                      styles.divider,\r\n                      dividerStyle && dividerStyle,\r\n                    ])}\r\n                  />\r\n                )}\r\n              </View>\r\n            )}\r\n\r\n        {image && (\r\n          <View style={imageWrapperStyle && imageWrapperStyle}>\r\n            <Image\r\n              style={[{ width: null, height: 150 }, imageStyle && imageStyle]}\r\n              source={image}\r\n              {...imageProps}\r\n            >\r\n              {(featuredTitle || featuredSubtitle) && (\r\n                <View style={styles.overlayContainer}>\r\n                  {featuredTitle && (\r\n                    <Text\r\n                      style={StyleSheet.flatten([\r\n                        styles.featuredTitle,\r\n                        featuredTitleStyle && featuredTitleStyle,\r\n                      ])}\r\n                    >\r\n                      {featuredTitle}\r\n                    </Text>\r\n                  )}\r\n                  {featuredSubtitle && (\r\n                    <Text\r\n                      style={StyleSheet.flatten([\r\n                        styles.featuredSubtitle,\r\n                        featuredSubtitleStyle && featuredSubtitleStyle,\r\n                      ])}\r\n                    >\r\n                      {featuredSubtitle}\r\n                    </Text>\r\n                  )}\r\n                </View>\r\n              )}\r\n            </Image>\r\n\r\n            <View\r\n              style={StyleSheet.flatten([\r\n                { padding: 10 },\r\n                wrapperStyle && wrapperStyle,\r\n              ])}\r\n            >\r\n              {children}\r\n            </View>\r\n          </View>\r\n        )}\r\n\r\n        {!image && children}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nCard.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.arrayOf(PropTypes.element),\r\n  ]),\r\n  containerStyle: ViewPropTypes.style,\r\n  wrapperStyle: ViewPropTypes.style,\r\n  overlayStyle: ViewPropTypes.style,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  titleStyle: TextPropTypes.style,\r\n  featuredTitle: PropTypes.string,\r\n  featuredTitleStyle: TextPropTypes.style,\r\n  featuredSubtitle: PropTypes.string,\r\n  featuredSubtitleStyle: TextPropTypes.style,\r\n  dividerStyle: ViewPropTypes.style,\r\n  image: ImageNative.propTypes.source,\r\n  imageStyle: ViewPropTypes.style,\r\n  imageWrapperStyle: ViewPropTypes.style,\r\n  imageProps: PropTypes.object,\r\n  titleNumberOfLines: PropTypes.number,\r\n  theme: PropTypes.object,\r\n};\r\n\r\nconst styles = {\r\n  container: theme => ({\r\n    backgroundColor: 'white',\r\n    borderWidth: 1,\r\n    padding: 15,\r\n    margin: 15,\r\n    marginBottom: 0,\r\n    borderColor: theme.colors.grey5,\r\n    ...Platform.select({\r\n      android: {\r\n        elevation: 1,\r\n      },\r\n      default: {\r\n        shadowColor: 'rgba(0,0,0, .2)',\r\n        shadowOffset: { height: 0, width: 0 },\r\n        shadowOpacity: 1,\r\n        shadowRadius: 1,\r\n      },\r\n    }),\r\n  }),\r\n  featuredTitle: {\r\n    fontSize: normalize(18),\r\n    marginBottom: 8,\r\n    color: 'white',\r\n    ...Platform.select({\r\n      android: {\r\n        ...fonts.android.black,\r\n      },\r\n      default: {\r\n        fontWeight: '800',\r\n      },\r\n    }),\r\n  },\r\n  featuredSubtitle: {\r\n    fontSize: normalize(13),\r\n    marginBottom: 8,\r\n    color: 'white',\r\n    ...Platform.select({\r\n      android: {\r\n        ...fonts.android.black,\r\n      },\r\n      default: {\r\n        fontWeight: '400',\r\n      },\r\n    }),\r\n  },\r\n  wrapper: {\r\n    backgroundColor: 'transparent',\r\n  },\r\n  divider: {\r\n    marginBottom: 15,\r\n  },\r\n  cardTitle: theme => ({\r\n    fontSize: normalize(14),\r\n    color: theme.colors.grey1,\r\n    ...Platform.select({\r\n      android: {\r\n        ...fonts.android.black,\r\n      },\r\n      default: {\r\n        fontWeight: 'bold',\r\n      },\r\n    }),\r\n    textAlign: 'center',\r\n    marginBottom: 15,\r\n  }),\r\n  imageCardTitle: {\r\n    marginTop: 15,\r\n  },\r\n  overlayContainer: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.2)',\r\n    alignSelf: 'stretch',\r\n    justifyContent: 'center',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n  },\r\n};\r\n\r\nexport { Card };\r\nexport default withTheme(Card, 'Card');\r\n"]},"metadata":{},"sourceType":"module"}