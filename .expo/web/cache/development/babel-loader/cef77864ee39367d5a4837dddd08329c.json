{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar strictUriEncode = require('strict-uri-encode');\n\nvar decodeComponent = require('decode-uri-component');\n\nvar splitOnFirst = require('split-on-first');\n\nvar isNullOrUndefined = function isNullOrUndefined(value) {\n  return value === null || value === undefined;\n};\n\nfunction encoderForArrayFormat(options) {\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key) {\n        return function (result, value) {\n          var index = result.length;\n\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[', index, ']'].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'bracket':\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[]'].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '[]=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'comma':\n    case 'separator':\n      return function (key) {\n        return function (result, value) {\n          if (value === null || value === undefined || value.length === 0) {\n            return result;\n          }\n\n          if (result.length === 0) {\n            return [[encode(key, options), '=', encode(value, options)].join('')];\n          }\n\n          return [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n        };\n      };\n\n    default:\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [encode(key, options)]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '=', encode(value, options)].join('')]);\n        };\n      };\n  }\n}\n\nfunction parserForArrayFormat(options) {\n  var result;\n\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key, value, accumulator) {\n        result = /\\[(\\d*)\\]$/.exec(key);\n        key = key.replace(/\\[\\d*\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = {};\n        }\n\n        accumulator[key][result[1]] = value;\n      };\n\n    case 'bracket':\n      return function (key, value, accumulator) {\n        result = /(\\[\\])$/.exec(key);\n        key = key.replace(/\\[\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = [value];\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n\n    case 'comma':\n    case 'separator':\n      return function (key, value, accumulator) {\n        var isArray = typeof value === 'string' && value.split('').indexOf(options.arrayFormatSeparator) > -1;\n        var newValue = isArray ? value.split(options.arrayFormatSeparator).map(function (item) {\n          return decode(item, options);\n        }) : value === null ? value : decode(value, options);\n        accumulator[key] = newValue;\n      };\n\n    default:\n      return function (key, value, accumulator) {\n        if (accumulator[key] === undefined) {\n          accumulator[key] = value;\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n  }\n}\n\nfunction validateArrayFormatSeparator(value) {\n  if (typeof value !== 'string' || value.length !== 1) {\n    throw new TypeError('arrayFormatSeparator must be single character string');\n  }\n}\n\nfunction encode(value, options) {\n  if (options.encode) {\n    return options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n  }\n\n  return value;\n}\n\nfunction decode(value, options) {\n  if (options.decode) {\n    return decodeComponent(value);\n  }\n\n  return value;\n}\n\nfunction keysSorter(input) {\n  if (Array.isArray(input)) {\n    return input.sort();\n  }\n\n  if (typeof input === 'object') {\n    return keysSorter(Object.keys(input)).sort(function (a, b) {\n      return Number(a) - Number(b);\n    }).map(function (key) {\n      return input[key];\n    });\n  }\n\n  return input;\n}\n\nfunction removeHash(input) {\n  var hashStart = input.indexOf('#');\n\n  if (hashStart !== -1) {\n    input = input.slice(0, hashStart);\n  }\n\n  return input;\n}\n\nfunction getHash(url) {\n  var hash = '';\n  var hashStart = url.indexOf('#');\n\n  if (hashStart !== -1) {\n    hash = url.slice(hashStart);\n  }\n\n  return hash;\n}\n\nfunction extract(input) {\n  input = removeHash(input);\n  var queryStart = input.indexOf('?');\n\n  if (queryStart === -1) {\n    return '';\n  }\n\n  return input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n  if (options.parseNumbers && !Number.isNaN(Number(value)) && typeof value === 'string' && value.trim() !== '') {\n    value = Number(value);\n  } else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n    value = value.toLowerCase() === 'true';\n  }\n\n  return value;\n}\n\nfunction parse(input, options) {\n  options = _extends({\n    decode: true,\n    sort: true,\n    arrayFormat: 'none',\n    arrayFormatSeparator: ',',\n    parseNumbers: false,\n    parseBooleans: false\n  }, options);\n  validateArrayFormatSeparator(options.arrayFormatSeparator);\n  var formatter = parserForArrayFormat(options);\n  var ret = Object.create(null);\n\n  if (typeof input !== 'string') {\n    return ret;\n  }\n\n  input = input.trim().replace(/^[?#&]/, '');\n\n  if (!input) {\n    return ret;\n  }\n\n  for (var _iterator = _createForOfIteratorHelperLoose(input.split('&')), _step; !(_step = _iterator()).done;) {\n    var param = _step.value;\n\n    var _splitOnFirst = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '='),\n        _splitOnFirst2 = _slicedToArray(_splitOnFirst, 2),\n        key = _splitOnFirst2[0],\n        value = _splitOnFirst2[1];\n\n    value = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n    formatter(decode(key, options), value, ret);\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(ret); _i < _Object$keys.length; _i++) {\n    var _key = _Object$keys[_i];\n    var _value = ret[_key];\n\n    if (typeof _value === 'object' && _value !== null) {\n      for (var _i2 = 0, _Object$keys2 = Object.keys(_value); _i2 < _Object$keys2.length; _i2++) {\n        var k = _Object$keys2[_i2];\n        _value[k] = parseValue(_value[k], options);\n      }\n    } else {\n      ret[_key] = parseValue(_value, options);\n    }\n  }\n\n  if (options.sort === false) {\n    return ret;\n  }\n\n  return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce(function (result, key) {\n    var value = ret[key];\n\n    if (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n      result[key] = keysSorter(value);\n    } else {\n      result[key] = value;\n    }\n\n    return result;\n  }, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = function (object, options) {\n  if (!object) {\n    return '';\n  }\n\n  options = _extends({\n    encode: true,\n    strict: true,\n    arrayFormat: 'none',\n    arrayFormatSeparator: ','\n  }, options);\n  validateArrayFormatSeparator(options.arrayFormatSeparator);\n\n  var shouldFilter = function shouldFilter(key) {\n    return options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === '';\n  };\n\n  var formatter = encoderForArrayFormat(options);\n  var objectCopy = {};\n\n  for (var _i3 = 0, _Object$keys3 = Object.keys(object); _i3 < _Object$keys3.length; _i3++) {\n    var key = _Object$keys3[_i3];\n\n    if (!shouldFilter(key)) {\n      objectCopy[key] = object[key];\n    }\n  }\n\n  var keys = Object.keys(objectCopy);\n\n  if (options.sort !== false) {\n    keys.sort(options.sort);\n  }\n\n  return keys.map(function (key) {\n    var value = object[key];\n\n    if (value === undefined) {\n      return '';\n    }\n\n    if (value === null) {\n      return encode(key, options);\n    }\n\n    if (Array.isArray(value)) {\n      return value.reduce(formatter(key), []).join('&');\n    }\n\n    return encode(key, options) + '=' + encode(value, options);\n  }).filter(function (x) {\n    return x.length > 0;\n  }).join('&');\n};\n\nexports.parseUrl = function (input, options) {\n  return {\n    url: removeHash(input).split('?')[0] || '',\n    query: parse(extract(input), options)\n  };\n};\n\nexports.stringifyUrl = function (input, options) {\n  var url = removeHash(input.url).split('?')[0] || '';\n  var queryFromUrl = exports.extract(input.url);\n  var parsedQueryFromUrl = exports.parse(queryFromUrl);\n  var hash = getHash(input.url);\n\n  var query = _extends(parsedQueryFromUrl, input.query);\n\n  var queryString = exports.stringify(query, options);\n\n  if (queryString) {\n    queryString = \"?\" + queryString;\n  }\n\n  return \"\" + url + queryString + hash;\n};","map":{"version":3,"sources":["C:/Users/sw/Documents/MobileAppProgramming2/node_modules/@react-navigation/core/node_modules/query-string/index.js"],"names":["strictUriEncode","require","decodeComponent","splitOnFirst","isNullOrUndefined","value","undefined","encoderForArrayFormat","options","arrayFormat","key","result","index","length","skipNull","skipEmptyString","encode","join","arrayFormatSeparator","parserForArrayFormat","accumulator","exec","replace","concat","isArray","split","indexOf","newValue","map","item","decode","validateArrayFormatSeparator","TypeError","strict","encodeURIComponent","keysSorter","input","Array","sort","Object","keys","a","b","Number","removeHash","hashStart","slice","getHash","url","hash","extract","queryStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","parse","formatter","ret","create","param","includes","k","reduce","Boolean","exports","stringify","object","shouldFilter","objectCopy","filter","x","parseUrl","query","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString"],"mappings":"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","sourcesContent":["'use strict';\r\nconst strictUriEncode = require('strict-uri-encode');\r\nconst decodeComponent = require('decode-uri-component');\r\nconst splitOnFirst = require('split-on-first');\r\n\r\nconst isNullOrUndefined = value => value === null || value === undefined;\r\n\r\nfunction encoderForArrayFormat(options) {\r\n\tswitch (options.arrayFormat) {\r\n\t\tcase 'index':\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tconst index = result.length;\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalue === undefined ||\r\n\t\t\t\t\t(options.skipNull && value === null) ||\r\n\t\t\t\t\t(options.skipEmptyString && value === '')\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\t...result,\r\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\r\n\t\t\t\t];\r\n\t\t\t};\r\n\r\n\t\tcase 'bracket':\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalue === undefined ||\r\n\t\t\t\t\t(options.skipNull && value === null) ||\r\n\t\t\t\t\t(options.skipEmptyString && value === '')\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\r\n\t\t\t};\r\n\r\n\t\tcase 'comma':\r\n\t\tcase 'separator':\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (result.length === 0) {\r\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn key => (result, value) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalue === undefined ||\r\n\t\t\t\t\t(options.skipNull && value === null) ||\r\n\t\t\t\t\t(options.skipEmptyString && value === '')\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\treturn [...result, encode(key, options)];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\r\n\t\t\t};\r\n\t}\r\n}\r\n\r\nfunction parserForArrayFormat(options) {\r\n\tlet result;\r\n\r\n\tswitch (options.arrayFormat) {\r\n\t\tcase 'index':\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\r\n\r\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\r\n\r\n\t\t\t\tif (!result) {\r\n\t\t\t\t\taccumulator[key] = value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (accumulator[key] === undefined) {\r\n\t\t\t\t\taccumulator[key] = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\taccumulator[key][result[1]] = value;\r\n\t\t\t};\r\n\r\n\t\tcase 'bracket':\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\r\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\r\n\r\n\t\t\t\tif (!result) {\r\n\t\t\t\t\taccumulator[key] = value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (accumulator[key] === undefined) {\r\n\t\t\t\t\taccumulator[key] = [value];\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\r\n\t\t\t};\r\n\r\n\t\tcase 'comma':\r\n\t\tcase 'separator':\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tconst isArray = typeof value === 'string' && value.split('').indexOf(options.arrayFormatSeparator) > -1;\r\n\t\t\t\tconst newValue = isArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\r\n\t\t\t\taccumulator[key] = newValue;\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn (key, value, accumulator) => {\r\n\t\t\t\tif (accumulator[key] === undefined) {\r\n\t\t\t\t\taccumulator[key] = value;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\r\n\t\t\t};\r\n\t}\r\n}\r\n\r\nfunction validateArrayFormatSeparator(value) {\r\n\tif (typeof value !== 'string' || value.length !== 1) {\r\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\r\n\t}\r\n}\r\n\r\nfunction encode(value, options) {\r\n\tif (options.encode) {\r\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\nfunction decode(value, options) {\r\n\tif (options.decode) {\r\n\t\treturn decodeComponent(value);\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\nfunction keysSorter(input) {\r\n\tif (Array.isArray(input)) {\r\n\t\treturn input.sort();\r\n\t}\r\n\r\n\tif (typeof input === 'object') {\r\n\t\treturn keysSorter(Object.keys(input))\r\n\t\t\t.sort((a, b) => Number(a) - Number(b))\r\n\t\t\t.map(key => input[key]);\r\n\t}\r\n\r\n\treturn input;\r\n}\r\n\r\nfunction removeHash(input) {\r\n\tconst hashStart = input.indexOf('#');\r\n\tif (hashStart !== -1) {\r\n\t\tinput = input.slice(0, hashStart);\r\n\t}\r\n\r\n\treturn input;\r\n}\r\n\r\nfunction getHash(url) {\r\n\tlet hash = '';\r\n\tconst hashStart = url.indexOf('#');\r\n\tif (hashStart !== -1) {\r\n\t\thash = url.slice(hashStart);\r\n\t}\r\n\r\n\treturn hash;\r\n}\r\n\r\nfunction extract(input) {\r\n\tinput = removeHash(input);\r\n\tconst queryStart = input.indexOf('?');\r\n\tif (queryStart === -1) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\treturn input.slice(queryStart + 1);\r\n}\r\n\r\nfunction parseValue(value, options) {\r\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\r\n\t\tvalue = Number(value);\r\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\r\n\t\tvalue = value.toLowerCase() === 'true';\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\nfunction parse(input, options) {\r\n\toptions = Object.assign({\r\n\t\tdecode: true,\r\n\t\tsort: true,\r\n\t\tarrayFormat: 'none',\r\n\t\tarrayFormatSeparator: ',',\r\n\t\tparseNumbers: false,\r\n\t\tparseBooleans: false\r\n\t}, options);\r\n\r\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\r\n\r\n\tconst formatter = parserForArrayFormat(options);\r\n\r\n\t// Create an object with no prototype\r\n\tconst ret = Object.create(null);\r\n\r\n\tif (typeof input !== 'string') {\r\n\t\treturn ret;\r\n\t}\r\n\r\n\tinput = input.trim().replace(/^[?#&]/, '');\r\n\r\n\tif (!input) {\r\n\t\treturn ret;\r\n\t}\r\n\r\n\tfor (const param of input.split('&')) {\r\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\r\n\r\n\t\t// Missing `=` should be `null`:\r\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\r\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\r\n\t\tformatter(decode(key, options), value, ret);\r\n\t}\r\n\r\n\tfor (const key of Object.keys(ret)) {\r\n\t\tconst value = ret[key];\r\n\t\tif (typeof value === 'object' && value !== null) {\r\n\t\t\tfor (const k of Object.keys(value)) {\r\n\t\t\t\tvalue[k] = parseValue(value[k], options);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tret[key] = parseValue(value, options);\r\n\t\t}\r\n\t}\r\n\r\n\tif (options.sort === false) {\r\n\t\treturn ret;\r\n\t}\r\n\r\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\r\n\t\tconst value = ret[key];\r\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\r\n\t\t\t// Sort object keys, not values\r\n\t\t\tresult[key] = keysSorter(value);\r\n\t\t} else {\r\n\t\t\tresult[key] = value;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}, Object.create(null));\r\n}\r\n\r\nexports.extract = extract;\r\nexports.parse = parse;\r\n\r\nexports.stringify = (object, options) => {\r\n\tif (!object) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\toptions = Object.assign({\r\n\t\tencode: true,\r\n\t\tstrict: true,\r\n\t\tarrayFormat: 'none',\r\n\t\tarrayFormatSeparator: ','\r\n\t}, options);\r\n\r\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\r\n\r\n\tconst shouldFilter = key => (\r\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\r\n\t\t(options.skipEmptyString && object[key] === '')\r\n\t);\r\n\r\n\tconst formatter = encoderForArrayFormat(options);\r\n\r\n\tconst objectCopy = {};\r\n\r\n\tfor (const key of Object.keys(object)) {\r\n\t\tif (!shouldFilter(key)) {\r\n\t\t\tobjectCopy[key] = object[key];\r\n\t\t}\r\n\t}\r\n\r\n\tconst keys = Object.keys(objectCopy);\r\n\r\n\tif (options.sort !== false) {\r\n\t\tkeys.sort(options.sort);\r\n\t}\r\n\r\n\treturn keys.map(key => {\r\n\t\tconst value = object[key];\r\n\r\n\t\tif (value === undefined) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tif (value === null) {\r\n\t\t\treturn encode(key, options);\r\n\t\t}\r\n\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\treturn value\r\n\t\t\t\t.reduce(formatter(key), [])\r\n\t\t\t\t.join('&');\r\n\t\t}\r\n\r\n\t\treturn encode(key, options) + '=' + encode(value, options);\r\n\t}).filter(x => x.length > 0).join('&');\r\n};\r\n\r\nexports.parseUrl = (input, options) => {\r\n\treturn {\r\n\t\turl: removeHash(input).split('?')[0] || '',\r\n\t\tquery: parse(extract(input), options)\r\n\t};\r\n};\r\n\r\nexports.stringifyUrl = (input, options) => {\r\n\tconst url = removeHash(input.url).split('?')[0] || '';\r\n\tconst queryFromUrl = exports.extract(input.url);\r\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl);\r\n\tconst hash = getHash(input.url);\r\n\tconst query = Object.assign(parsedQueryFromUrl, input.query);\r\n\tlet queryString = exports.stringify(query, options);\r\n\tif (queryString) {\r\n\t\tqueryString = `?${queryString}`;\r\n\t}\r\n\r\n\treturn `${url}${queryString}${hash}`;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}